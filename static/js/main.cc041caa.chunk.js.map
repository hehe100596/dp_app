{"version":3,"sources":["img/dice.png","js/api.js","js/gamesquare.js","js/gameboard.js","js/scoreboard.js","js/card.js","js/game.js","js/app.js","js/serviceWorker.js","index.js"],"names":["module","exports","socket","openSocket","subscribeToTimer","offset","cb","on","timestamp","emit","interval","Gamesquare","props","className","style","height","this","gamesquareHeight","width","gamesquareWidth","Component","Gameboard","Scoreboard","scoreboardHeight","left","Card","cardHeight","Game","state","backgroundColor","gameboardSize","changeColor","color","i","Math","floor","random","setState","exitGame","window","location","reload","start","class","position","top","type","right","bottom","onClick","App","displayGame","timeZonePlus","err","timeZoneMinus","src","logo","alt","href","target","rel","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc041caa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dice.dde057f1.png\";","import openSocket from 'socket.io-client';\r\nconst socket = openSocket('http://localhost:8000');\r\n\r\nfunction subscribeToTimer(offset, cb) {\r\n\tsocket.on('timer', timestamp => cb(null, timestamp));\r\n\tsocket.emit('subscribeToTimer', { offset: offset, interval: 1000 });\r\n}\r\n\r\nexport { subscribeToTimer }","import React, { Component } from 'react';\r\nimport '../css/gamesquare.css';\r\n\r\nclass Gamesquare extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Gamesquare\" style={{height: this.props.gamesquareHeight, width: this.props.gamesquareWidth}}>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n \r\nexport default Gamesquare;","import React, { Component } from 'react';\r\nimport '../css/gameboard.css';\r\nimport Gamesquare from './gamesquare.js';\r\n\r\nclass Gameboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Gameboard\">\r\n                <Gamesquare\r\n                    gamesquareHeight = {this.props.gamesquareHeight}\r\n                    gamesquareWidth = {this.props.gamesquareWidth}\r\n\t\t\t\t/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n \r\nexport default Gameboard;","import React, { Component } from 'react';\r\nimport '../css/scoreboard.css';\r\n\r\nclass Scoreboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        var scoreboardHeight = \"calc(7vh + \" + this.props.scoreboardHeight + \")\";\r\n        var scoreboardWidth = \"40vw\";\r\n        var left = \"calc(50vw - \" + scoreboardWidth + \" / 2)\";\r\n\r\n        return (\r\n            <div className=\"Scoreboard\" style={{height: scoreboardHeight, width: scoreboardWidth, left: left}}>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n \r\nexport default Scoreboard;","import React, { Component } from 'react';\r\nimport '../css/card.css';\r\n\r\nclass Card extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        var cardHeight = \"calc(7vh + \" + this.props.cardHeight + \")\";\r\n        var cardWidth = \"20vw\";\r\n        var left = \"calc(50vw - \" + cardWidth + \" / 2)\";\r\n        \r\n        return (\r\n            <div className=\"Card\" style={{height: cardHeight, width: cardWidth, left: left}}>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n \r\nexport default Card;","import React, { Component } from 'react';\r\nimport '../css/game.css';\r\nimport Gameboard from './gameboard.js';\r\nimport Scoreboard from './scoreboard.js';\r\nimport Card from './card.js';\r\n\r\nclass Game extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        backgroundColor: \"#006600\",\r\n        gameboardSize: 20,\r\n        gamesquareHeight: \"5vh\",\r\n        gamesquareWidth: \"3vw\"\r\n\t};\r\n    \r\n    changeColor = () => {\r\n        var letters = '0123456789ABCDEF';\r\n        var color = '#';\r\n        for (var i = 0; i < 6; i++) {\r\n          color += letters[Math.floor(Math.random() * 16)];\r\n        };\r\n\t\tthis.setState({\r\n\t\t\tbackgroundColor: color\r\n\t\t});\r\n    }\r\n\r\n    exitGame = () => {\r\n        window.location.reload(false);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.start) {\r\n            return null;\r\n        }    \r\n        else {\r\n            return (\r\n                <div className=\"Game\" style={{backgroundColor: this.state.backgroundColor}}>\r\n                    <div class=\"game-btn\" style={{position: \"fixed\", top: \"1.5vh\", left: \"6vw\"}}>\r\n                        <button type=\"button\">BTN1</button>\r\n                    </div>\r\n                    <div class=\"game-btn\" style={{position: \"fixed\", top: \"1.5vh\", left: \"14vw\"}}>\r\n                        <button type=\"button\">BTN2</button>\r\n                    </div>\r\n                    <div class=\"game-btn\" style={{position: \"fixed\", top: \"1.5vh\", right: \"14vw\"}}>\r\n                        <button type=\"button\">BTN3</button>\r\n                    </div>\r\n                    <div class=\"game-btn\" style={{position: \"fixed\", top: \"1.5vh\", right: \"6vw\"}}>\r\n                        <button type=\"button\">BTN4</button>\r\n                    </div>\r\n                    <div class=\"game-btn\" style={{position: \"fixed\", bottom: \"1.5vh\", left: \"2.5vw\"}}>\r\n                        <button onClick={this.changeColor} type=\"button\" style={{width: \"10vw\"}}>COLOR BACKGROUND</button>\r\n                    </div>\r\n                    <div class=\"game-btn\" style={{position: \"fixed\", bottom: \"1.5vh\", right: \"2.5vw\"}}>\r\n                        <button onClick={this.exitGame} type=\"button\" style={{width: \"10vw\"}}>EXIT GAME</button>\r\n                    </div>\r\n                    <Gameboard\r\n                        gamesquareHeight = {this.state.gamesquareHeight}\r\n                        gamesquareWidth = {this.state.gamesquareWidth}\r\n\t\t\t\t    />\r\n                    <Card\r\n                        cardHeight = {this.state.gamesquareHeight}\r\n\t\t\t\t    />\r\n                    <Scoreboard\r\n                        scoreboardHeight = {this.state.gamesquareHeight}\r\n\t\t\t\t    />\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n}\r\n \r\nexport default Game;","import React, { Component } from 'react';\nimport logo from '../img/dice.png';\nimport '../css/app.css';\nimport { subscribeToTimer } from './api.js';\nimport Game from './game.js';\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.offset = 0;\n\t\tsubscribeToTimer(this.offset, (err, timestamp) => this.setState({ \n\t\t\ttimestamp\n\t\t}));\n\t}\n\n\tstate = {\n\t\ttimestamp: '---',\n\t\tdisplayGame: false\n\t};\n\t\n\ttimeZonePlus = () => {\n\t\tthis.offset++;\n\t\tsubscribeToTimer(this.offset, (err, timestamp) => this.setState({ \n\t\t\ttimestamp\n\t\t}));\n\t};\n\t\n\ttimeZoneMinus = () => {\n\t\tthis.offset--;\n\t\tsubscribeToTimer(this.offset, (err, timestamp) => this.setState({ \n\t\t\ttimestamp\n\t\t}));\n\t};\n\n\tdisplayGame = () => {\n\t\tthis.setState({\n\t\t\tdisplayGame: !this.state.displayGame\n\t\t});\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\tPrototyp hry:\n\t\t\t\t\t\t<br /><br />\n\t\t\t\t\t\t<div class=\"game-btn\">\n\t\t\t\t\t\t\t<button onClick={this.displayGame} type=\"button\">START</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br /><br />\n\t\t\t\t\t\tUkazateľ aktuálneho času na ilustráciu komunikácie so serverom:\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<i>{this.state.timestamp}</i>\n\t\t\t\t\t\t<br /><br />\n\t\t\t\t\t\tZmena časovej zóny:\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div class=\"timer-btn\">\n\t\t\t\t\t\t\t<button onClick={this.timeZonePlus} type=\"button\">+</button> <button onClick={this.timeZoneMinus} type=\"button\">-</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</p>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName=\"App-link\"\n\t\t\t\t\t\thref=\"https://reactjs.org\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\tĎalšie informácie k React...\n\t\t\t\t\t</a>\n\t\t\t\t</header>\n\t\t\t\t<Game \n\t\t\t\t\tstart = {this.state.displayGame}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t};\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './js/app.js';\nimport * as serviceWorker from './js/serviceWorker.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}